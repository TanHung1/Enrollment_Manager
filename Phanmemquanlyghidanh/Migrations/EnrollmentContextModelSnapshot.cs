// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phanmemquanlyghidanh.Models;

#nullable disable

namespace Phanmemquanlyghidanh.Migrations
{
    [DbContext(typeof(EnrollmentContext))]
    partial class EnrollmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CooperationDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("IdentityCard")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.CheckOut", b =>
                {
                    b.Property<int>("CheckOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckOutId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CheckOut_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StatusCheckOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CheckOutId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("CheckOuts");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoomId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassRoomCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassRoomDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassRoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentStudent")
                        .HasColumnType("int");

                    b.Property<int>("NumberofStudent")
                        .HasColumnType("int");

                    b.Property<int>("SchooYearId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolYearSchooYearId")
                        .HasColumnType("int");

                    b.Property<string>("StatusRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("TimeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TuitionFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClassRoomId");

                    b.HasIndex("SchoolYearSchooYearId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("genders");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.HolidaySchedule", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameHoliday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.HasKey("HolidayId");

                    b.ToTable("HolidaySchedules");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageColumnPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FinalExamPoint1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FinalExamPoint2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FirstColumnPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FourthColumnPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SecondColumnPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ThirdColumnPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TypeMarkTypeID")
                        .HasColumnType("int");

                    b.HasKey("MarkId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TypeMarkTypeID");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SchoolYear", b =>
                {
                    b.Property<int>("SchooYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchooYearId"));

                    b.Property<string>("SchoolYearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchooYearId");

                    b.ToTable("SchoolYears");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectCategoryId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SubjectCategory", b =>
                {
                    b.Property<int>("SubjectCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectCategoryId"));

                    b.Property<string>("SubjectCategory_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectCategoryId");

                    b.ToTable("SubjectCategories");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.TypeMark", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"));

                    b.Property<string>("Coefficient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeID");

                    b.ToTable("TypeMarks");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Account", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.ClassRoom", null)
                        .WithMany("Account")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.Gender", null)
                        .WithMany("Accounts")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.Role", null)
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.CheckOut", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.Account", null)
                        .WithMany("checkouts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.ClassRoom", null)
                        .WithMany("checkouts")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.ClassRoom", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.SchoolYear", null)
                        .WithMany("ClassRooms")
                        .HasForeignKey("SchoolYearSchooYearId");

                    b.HasOne("Phanmemquanlyghidanh.Models.Subject", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Mark", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.Account", null)
                        .WithMany("marks")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.ClassRoom", null)
                        .WithMany("marks")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.Subject", null)
                        .WithMany("marks")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.TypeMark", null)
                        .WithMany("Marks")
                        .HasForeignKey("TypeMarkTypeID");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Schedule", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.Account", null)
                        .WithMany("schedules")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.ClassRoom", null)
                        .WithMany("Schedules")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.Subject", null)
                        .WithMany("schedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.Course", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Phanmemquanlyghidanh.Models.SubjectCategory", null)
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Account", b =>
                {
                    b.Navigation("checkouts");

                    b.Navigation("marks");

                    b.Navigation("schedules");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.ClassRoom", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Schedules");

                    b.Navigation("checkouts");

                    b.Navigation("marks");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Gender", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SchoolYear", b =>
                {
                    b.Navigation("ClassRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("marks");

                    b.Navigation("schedules");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SubjectCategory", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.TypeMark", b =>
                {
                    b.Navigation("Marks");
                });
#pragma warning restore 612, 618
        }
    }
}
