// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phanmemquanlyghidanh.Models;

#nullable disable

namespace Phanmemquanlyghidanh.Migrations
{
    [DbContext(typeof(EnrollmentDBContext))]
    [Migration("20230913141405_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.CheckOut", b =>
                {
                    b.Property<int>("CheckOut_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckOut_ID"));

                    b.Property<string>("CheckOut_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CheckOut_ID");

                    b.ToTable("CheckOutRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoom_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoom_ID"));

                    b.Property<int>("CheckOut_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CheckOut_ID1")
                        .HasColumnType("int");

                    b.Property<string>("ClassRoom_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassRoom_Name")
                        .HasColumnType("int");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberofStudent")
                        .HasColumnType("int");

                    b.Property<int>("Schedule_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Schedule_ID1")
                        .HasColumnType("int");

                    b.Property<string>("SchoolDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusRoom_ID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusRoom_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Student_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Subject_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Subject_ID1")
                        .HasColumnType("int");

                    b.Property<int>("Teacher_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Teacher_ID1")
                        .HasColumnType("int");

                    b.Property<string>("TimeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassRoom_ID");

                    b.HasIndex("CheckOut_ID1");

                    b.HasIndex("Schedule_ID1");

                    b.HasIndex("StatusRoom_ID1");

                    b.HasIndex("Student_ID1");

                    b.HasIndex("Subject_ID1");

                    b.HasIndex("Teacher_ID1");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Schedule", b =>
                {
                    b.Property<int>("Schedule_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_ID"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Schedule_ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.StatusRoom", b =>
                {
                    b.Property<int>("StatusRoom_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusRoom_ID"));

                    b.Property<string>("StatusRoom_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusRoom_ID");

                    b.ToTable("StatusRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Student", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<int>("CheckOut_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CheckOut_ID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name_Parent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Student_ID");

                    b.HasIndex("CheckOut_ID1");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.Property<int>("Subject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectCategory_ID")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectCategory_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Subject_ID");

                    b.HasIndex("SubjectCategory_ID1");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SubjectCategory", b =>
                {
                    b.Property<int>("SubjectCategory_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectCategory_ID"));

                    b.Property<string>("SubjectCategory_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectCategory_ID");

                    b.ToTable("SubjectCategories");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Teacher", b =>
                {
                    b.Property<int>("Teacher_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Teacher_ID"));

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdentityCard")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subject_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Subject_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Teacher_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher_PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Teacher_ID");

                    b.HasIndex("Subject_ID1");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.ClassRoom", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.CheckOut", null)
                        .WithMany("ClassRooms")
                        .HasForeignKey("CheckOut_ID1");

                    b.HasOne("Phanmemquanlyghidanh.Models.Schedule", null)
                        .WithMany("ClassRooms")
                        .HasForeignKey("Schedule_ID1");

                    b.HasOne("Phanmemquanlyghidanh.Models.StatusRoom", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("StatusRoom_ID1");

                    b.HasOne("Phanmemquanlyghidanh.Models.Student", null)
                        .WithMany("ClassRooms")
                        .HasForeignKey("Student_ID1");

                    b.HasOne("Phanmemquanlyghidanh.Models.Subject", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("Subject_ID1");

                    b.HasOne("Phanmemquanlyghidanh.Models.Teacher", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("Teacher_ID1");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Student", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.CheckOut", null)
                        .WithMany("Students")
                        .HasForeignKey("CheckOut_ID1");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.SubjectCategory", null)
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectCategory_ID1");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Teacher", b =>
                {
                    b.HasOne("Phanmemquanlyghidanh.Models.Subject", null)
                        .WithMany("Teachers")
                        .HasForeignKey("Subject_ID1");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.CheckOut", b =>
                {
                    b.Navigation("ClassRooms");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Schedule", b =>
                {
                    b.Navigation("ClassRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.StatusRoom", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Student", b =>
                {
                    b.Navigation("ClassRooms");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Subject", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.SubjectCategory", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Phanmemquanlyghidanh.Models.Teacher", b =>
                {
                    b.Navigation("Classrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
